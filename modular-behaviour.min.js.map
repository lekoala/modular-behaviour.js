{
  "version": 3,
  "sources": ["modular-behaviour.js"],
  "sourcesContent": ["\"use strict\";\n\nconst PREFIX = \"modular-behaviour\";\n/**\n * @var {number}\n */\nlet idx = 0;\n/**\n * @var {object}\n */\nlet watchList = {};\n/**\n * @var {Function}\n */\nlet timeout = null;\n/**\n * @var {number}\n */\nlet timeoutCounter = 0;\n\n/**\n * Easily bind js behaviour to your html nodes\n */\nclass ModularBehaviour extends HTMLElement {\n  constructor() {\n    super();\n    idx++;\n  }\n\n  set name(value) {\n    this.setAttribute(\"name\", value);\n  }\n\n  get name() {\n    return this.getAttribute(\"name\");\n  }\n\n  set selector(value) {\n    this.setAttribute(\"selector\", value);\n  }\n\n  get selector() {\n    return this.getAttribute(\"selector\");\n  }\n\n  set func(value) {\n    this.setAttribute(\"func\", value);\n  }\n\n  get func() {\n    return this.getAttribute(\"func\");\n  }\n\n  set config(value) {\n    this.setAttribute(\"config\", value);\n  }\n\n  get config() {\n    return this.getAttribute(\"config\");\n  }\n\n  set manual(value) {\n    if (value) {\n      this.setAttribute(\"manual\", \"\");\n    } else {\n      this.removeAttribute(\"manual\");\n    }\n  }\n\n  get manual() {\n    return this.hasAttribute(\"manual\");\n  }\n\n  set jsonconfig(value) {\n    if (value) {\n      this.setAttribute(\"jsonconfig\", \"\");\n    } else {\n      this.removeAttribute(\"jsonconfig\");\n    }\n  }\n\n  get jsonconfig() {\n    return this.hasAttribute(\"jsonconfig\");\n  }\n\n  /**\n   * This allows loading arbitrary template into script\n   * @param {HTMLTemplateElement} el\n   */\n  loadConfigTemplate(el) {\n    const s = document.createElement(\"script\");\n    s.textContent = el.content.textContent;\n    this.appendChild(s);\n  }\n\n  /**\n   * Resolve config by checking the global or namespace scope and merge with data attributes\n   * @param {object} config\n   * @returns {object}\n   */\n  resolveConfig(config = {}) {\n    // Load config from js var\n    if (this.config) {\n      config = ModularBehaviour.globalValue(this.config);\n      if (!config) {\n        console.warn(`${this.config} is not available`);\n        config = {};\n      }\n      if (typeof config === \"function\") {\n        config = config();\n      }\n    }\n    // Merge data attribute\n    config = Object.assign(config, this.dataset);\n    return config;\n  }\n\n  /**\n   * Find value in the global or namespaced scope\n   * @param {string} name\n   * @returns {Function|object|null}\n   */\n  static globalValue(name) {\n    if (!name) {\n      return null;\n    }\n    if (name.includes(\".\")) {\n      const parts = name.split(\".\");\n      const ns = parts[0];\n      const func = parts[1];\n      const scope = window[ns];\n      if (!scope) {\n        return;\n      }\n      // Wrap jQuery in a constructor function\n      if ((ns === \"$\" || ns === \"jQuery\") && typeof window.jQuery.fn[func] !== \"undefined\") {\n        return (el, opts) => {\n          window.jQuery.fn[func].call(window.jQuery(el), opts);\n        };\n      }\n      return scope[func] || null;\n    }\n    return window[name] || null;\n  }\n\n  /**\n   * Global watcher that can watch multiple functions until they are defined\n   * @param {string} name\n   * @param {Function} cb\n   */\n  static watch(name, cb) {\n    // Check for a provider script for a faster result than polling\n    const script = document.querySelector(`script[provides=\"${name}\"]`);\n    if (script) {\n      const prevOnload = script.onload;\n      script.onload = (e) => {\n        if (prevOnload) {\n          prevOnload(e);\n        }\n        const constructor = ModularBehaviour.globalValue(name);\n        if (constructor) {\n          cb(constructor);\n        }\n      };\n      return;\n    }\n\n    // Or use poll logic for all callbacks under the same name\n    if (!watchList[name]) {\n      watchList[name] = [];\n    }\n    watchList[name].push(cb);\n    // Set a progressive timer for all, but always reset counter\n    timeoutCounter = 10;\n    if (!timeout) {\n      timeout = () => {\n        const res = ModularBehaviour.scanWatchList();\n        if (res) {\n          timeout = null;\n          return;\n        }\n        if (timeoutCounter < 100) {\n          // 10 times at 10ms\n          timeoutCounter += 10;\n        } else {\n          // 20 times at 10ms\n          timeoutCounter += 100;\n        }\n\n        if (timeoutCounter < 2000) {\n          setTimeout(timeout, timeoutCounter);\n        } else {\n          console.warn(`Unable to load ${ModularBehaviour.watching().join(\",\")}`);\n          watchList = {};\n        }\n      };\n      setTimeout(timeout, timeoutCounter);\n    }\n  }\n\n  /**\n   * Scan watch list if global value is available\n   * @returns {bool} true when watch list is empty\n   */\n  static scanWatchList() {\n    for (var n in watchList) {\n      const constructor = ModularBehaviour.globalValue(n);\n      if (constructor) {\n        for (var cb of watchList[n]) {\n          cb(constructor);\n        }\n        delete watchList[n];\n\n        // everything is cleared\n        if (!Object.keys(watchList).length) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Manually runs through all nodes\n   * @param {string} name\n   * @returns {bool}\n   */\n  static run(name) {\n    const constructor = ModularBehaviour.globalValue(name);\n    if (!constructor) {\n      return false;\n    }\n    document.querySelectorAll(`modular-behaviour[name=\"${name}\"]`).forEach((el) => {\n      if (el.classList.contains(`${PREFIX}-initialized`)) {\n        return;\n      }\n      el.init(constructor);\n    });\n    return true;\n  }\n\n  /**\n   * @returns {array}\n   */\n  static watching() {\n    return Object.keys(watchList);\n  }\n\n  /**\n   * @link https://stackoverflow.com/questions/29093396/how-do-you-check-the-difference-between-an-ecmascript-6-class-and-function\n   * @param {Function} fn\n   * @returns {bool}\n   */\n  static isConstructable(fn) {\n    try {\n      new new Proxy(fn, { construct: () => ({}) })();\n      return true;\n    } catch (err) {\n      return false;\n    }\n  }\n\n  /**\n   * @param {Function} constructor\n   */\n  init(constructor) {\n    const configTemplate = this.querySelector(`template.${PREFIX}-config`);\n    let config = {};\n    if (configTemplate) {\n      if (this.jsonconfig) {\n        config = JSON.parse(configTemplate.content.textContent);\n      } else {\n        this.loadConfigTemplate(configTemplate);\n      }\n    }\n    // Fetch first valid node or selector\n    const el = this.selector ? this.querySelector(this.selector) : this.firstElementChild;\n    if (!el) {\n      console.warn(\"No element\");\n      return;\n    }\n\n    // Set a default id\n    if (!el.hasAttribute(\"id\")) {\n      el.setAttribute(\"id\", `${PREFIX}-${idx}`);\n    }\n\n    // Override constructor\n    if (this.func) {\n      constructor = ModularBehaviour.globalValue(this.func);\n      if (!constructor) {\n        console.warn(`${this.func} is not available`);\n        return;\n      }\n    }\n\n    // Instantiate class or function. ES6 Classes must use \"new\" keyword.\n    const isClass = ModularBehaviour.isConstructable(constructor);\n    let instance;\n    if (isClass) {\n      new constructor(el, this.resolveConfig(config));\n    } else {\n      Object.create(constructor.prototype || constructor);\n      constructor.apply(instance, [el, this.resolveConfig(config)]);\n    }\n\n    // Register init class\n    this.classList.remove(`${PREFIX}-pending`);\n    this.classList.add(`${PREFIX}-initialized`);\n  }\n\n  connectedCallback() {\n    // Look for the class or function to instantiate\n    const constructor = ModularBehaviour.globalValue(this.name);\n    if (!constructor) {\n      this.classList.add(`${PREFIX}-pending`);\n      // Need to call `run` manually\n      if (this.manual) {\n        return;\n      }\n      // Watch until defined\n      ModularBehaviour.watch(this.name, (constructor) => {\n        this.init(constructor);\n      });\n      return;\n    }\n    this.init(constructor);\n  }\n}\n\ncustomElements.define(\"modular-behaviour\", ModularBehaviour);\n\nexport default ModularBehaviour;\n"],
  "mappings": "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",
  "names": []
}
